Slip no 13

13.Write a program to merge two sets of integers and calculate sum of all integers in the merged set. Also display largest and smallest element from merged set.

import scala.collection.mutable.Set
object Slip13
{
def main(args:Array[String])
{
var s1=Set(1,2,3,4,5,6);
var s2=Set(4,5,6,7,8);
s1++=s2;
println(s1);
println("Sum:"+s1.sum);
println("Maximum:"+s1.max);
println("Minimum:"+s1.min);
}
}

2 Model the following Import Export information as a graph model, and answer the following queries using Cypher. There are countries which import and export products to each other. Products are produced across different states in a country. Production of the products is measured in %. A product can be exported if its production exceeds 60%. A product needs to be imported if its consumption percentage is more than its production percentage in a country.
create (c:Country{name:"India"}) return c;
create (c:Country{name:"USA"}) return c;
create (c:Country{name:"Israil"}) return c;
create (c:Country{name:"Arab"}) return c;
create (c:Country{name:"Europe"}) return c;
create (s:States{name:"Maharashtra"}) return s;
create (s:States{name:"Punjab"}) return s;
create (s:States{name:"California"}) return s;
create (p:Product{name:"Wheat",production:"75%"}) return p;
create (p:Product{name:"Oil",production:"90%"}) return p;
create (p:Product{name:"Sugar",production:"50%"}) return p;
create (p:Product{name:"GroundNuts",production:"50%"}) return p;
create (p:Product{name:"Cotton",production:"50%"}) return p;

match (c:Country),(s:States),(p:Product) where c.name="India" and s.name="Maharashtra" and p.name="Wheat" create (c)-[:has_States]->(s)-[:Produces]->(p) return c,s,p;
match (c:Country),(s:States),(p:Product) where c.name="USA" and s.name="California" and p.name="Oil" create (c)-[:has_States]->(s)-[:Produces]->(p) return c,s,p;
match (c:Country),(s:States),(p:Product) where c.name="India" and s.name="Maharashtra" and p.name="Oil" create (c)-[:has_States]->(s)-[:Produces]->(p) return c,s,p;
match (c:Country),(s:States),(p:Product) where c.name="India" and s.name="Maharashtra" and p.name="GroundNuts" create (c)-[:has_States]->(s)-[:Produces]->(p) return c,s,p;
match (c:Country),(s:States),(p:Product) where c.name="India" and s.name="Punjab" and p.name="Sugar" create (c)-[:has_States]->(s)-[:Produces]->(p) return c,s,p;

Queries

1) List the countries that export oil
 match (c:Country),(p:Product) where p.name="Oil" and (c)-[:exports]->(p) return c.name;

2) List the products produced in “Maharashtra”
match (s:States),(p:Product) where s.name="Maharashtra" and (s)-[:Produces]->(p) return p.name;
 
