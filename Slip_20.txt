Slip no 20
20.Create a list of 10 random numbers. Create another list from members of first list using function 3n2+4n+6.
 Display second list in ascending order.

import scala.util._
object Slip20
{
def main(args:Array[String])
{
var l1:List[Int]=List();
var l2:List[Int]=List();
var n1=0;
for(i<- 1 to 10)
{
l1::=Random.nextInt(10);
}
println("List1:"+l1.sorted);
for(j<-l1)
{
n1=3*j*j+4*j+6;
l2::=n1;
}
println("list2:"+l2.sorted)
}
}

2 Model the following University information system as a graph model, and answer the following queries using Cypher. 
University has various departments like Mathematics, Geology, Chemistry, etc. 
Each department conducts various courses and a course may be conducted by multiple departments. 

create(u:University{name:"Pune University"}) return u;
create(d:Department{name:"Chemistry"}) return d;
create(d:Department{name:"Geology"}) return d;
create(c:Course{name:"BSc"}) return c;
create(c:Course{name:"MSc"}) return c;
match (u:University),(d:Department) where d.name="Chemistry" and u.name="Pune University" create (u)-[:has]->(d) return u,d;
match (u:University),(d:Department) where d.name="Geology" and u.name="Pune University" create (u)-[:has]->(d) return u,d;

match (c:Course),(d:Department) where c.name="MSc" and d.name="Chemistry" create (d)-[:conduct]->(c) return d,c;
match (c:Course),(d:Department) where c.name="BSc" and d.name="Geology" create (d)-[:conduct]->(c) return d,c;
match (c:Course),(d:Department) where c.name="BSc" and d.name="Chemistry" create (d)-[:conduct]->(c) return d,c;

Queries

1) List the names of the courses provided by Chemistry Department. 
match (c:Course),(d:Department) where d.name="Chemistry" and (d)-[:conduct]->(c) return c.name;

2)List the details of all the departments in the university. 
match (u:University),(d:Department) where u.name="Pune University" create (u)-[:has]->(d) return d.name;
